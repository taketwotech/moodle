{"version":3,"sources":["../../../src/local/activitychooser/dialogue.js"],"names":["showModuleHelp","carousel","moduleData","help","find","selectors","regions","innerHTML","spinnerPromise","transitionPromiseResolver","transitionPromise","Promise","resolve","contentPromise","Templates","renderForPromise","all","then","html","js","replaceNodeContents","querySelector","chooserSummary","header","focus","catch","Notification","exception","one","manageFavouriteState","modalBody","caller","partialFavourite","isFavourite","dataset","favourited","id","name","internal","Repository","unfavouriteModule","favouriteModule","registerListenerEvents","modal","mappedModules","bodyClickListener","e","target","closest","actions","optionActions","showSummary","getBody","module","chooserOption","container","moduleName","modname","get","manageFavourite","matches","closeOption","on","allModules","modules","getModuleSelector","clearSearch","searchInput","search","value","toggleSearchResultsView","getBodyPromise","body","interval","pause","keyboard","addEventListener","activeSectionId","elements","activetab","getAttribute","sectionChooserOptions","getSectionChooserOptions","firstChooserOption","toggleFocusableChooserOption","initTabsKeyboardNavigation","initChooserOptionsKeyboardNavigation","favTabNav","favouriteTabNav","recommendedTabNav","defaultTabNav","forEach","element","firstLink","parentElement","firstElementChild","lastLink","lastElementChild","keyCode","arrowRight","nextLink","nextElementSibling","srcElement","tabIndex","classList","contains","arrowLeft","previousLink","previousElementSibling","home","end","space","preventDefault","click","chooserOptionsContainer","chooserOptions","querySelectorAll","Array","from","enter","currentOption","nextOption","firstOption","toFocusOption","clickErrorHandler","focusChooserOption","previousOption","lastOption","currentChooserOption","previousChooserOption","isFocusable","chooserOptionLink","addChooser","chooserOptionHelp","chooserOptionFavourite","item","fallback","renderSearchResults","searchResultsContainer","searchResultsData","templateData","length","searchQuery","searchResults","chooserContainer","chooser","clearSearchButton","clearsearch","searchIcon","searchicon","searchModules","searchResultItemsContainer","searchResultItems","firstSearchResultItem","add","remove","setAttribute","removeAttribute","searchTerm","toLowerCase","activity","activityName","title","activityDesc","includes","push","disableFocusAllChooserOptions","allChooserOptions","displayChooser","origin","sectionModules","Map","set","componentname","link","getRoot","ModalEvents","hidden","destroy","shown","getModal","tab","activeSectionChooserOptions","prevActiveSectionId","relatedTarget","prevActiveSectionChooserOptions","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/local/chooser/dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\nimport {addIconToContainer} from 'core/loadingicon';\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport Notification from 'core/notification';\nimport {debounce} from 'core/utils';\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method showModuleHelp\n * @param {jQuery} carousel Our initialized carousel to manipulate\n * @param {Object} moduleData Data of the module to carousel to\n */\nconst showModuleHelp = (carousel, moduleData) => {\n    const help = carousel.find(selectors.regions.help)[0];\n    help.innerHTML = '';\n\n    // Add a spinner.\n    const spinnerPromise = addIconToContainer(help);\n\n    // Used later...\n    let transitionPromiseResolver = null;\n    const transitionPromise = new Promise(resolve => {\n        transitionPromiseResolver = resolve;\n    });\n\n    // Build up the html & js ready to place into the help section.\n    const contentPromise = Templates.renderForPromise('core_course/local/activitychooser/help', moduleData);\n\n    // Wait for the content to be ready, and for the transition to be complet.\n    Promise.all([contentPromise, spinnerPromise, transitionPromise])\n        .then(([{html, js}]) => Templates.replaceNodeContents(help, html, js))\n        .then(() => {\n            help.querySelector(selectors.regions.chooserSummary.header).focus();\n            return help;\n        })\n        .catch(Notification.exception);\n\n    // Move to the next slide, and resolve the transition promise when it's done.\n    carousel.one('slid.bs.carousel', () => {\n        transitionPromiseResolver();\n    });\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n};\n\n/**\n * Given a user wants to change the favourite state of a module we either add or remove the status.\n * We also propergate this change across our map of modals.\n *\n * @method manageFavouriteState\n * @param {HTMLElement} modalBody The DOM node of the modal to manipulate\n * @param {HTMLElement} caller\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nconst manageFavouriteState = async(modalBody, caller, partialFavourite) => {\n    const isFavourite = caller.dataset.favourited;\n    const id = caller.dataset.id;\n    const name = caller.dataset.name;\n    const internal = caller.dataset.internal;\n    // Switch on fave or not.\n    if (isFavourite === 'true') {\n        await Repository.unfavouriteModule(name, id);\n\n        partialFavourite(internal, false, modalBody);\n    } else {\n        await Repository.favouriteModule(name, id);\n\n        partialFavourite(internal, true, modalBody);\n    }\n\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nconst registerListenerEvents = (modal, mappedModules, partialFavourite) => {\n    const bodyClickListener = e => {\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            const module = e.target.closest(selectors.regions.chooserOption.container);\n            const moduleName = module.dataset.modname;\n            const moduleData = mappedModules.get(moduleName);\n            showModuleHelp(carousel, moduleData);\n        }\n\n        if (e.target.closest(selectors.actions.optionActions.manageFavourite)) {\n            const caller = e.target.closest(selectors.actions.optionActions.manageFavourite);\n            manageFavouriteState(modal.getBody()[0], caller, partialFavourite);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', () => {\n                const allModules = modal.getBody()[0].querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(selectors.regions.getModuleSelector(e.target.dataset.modname));\n                caller.focus();\n            });\n        }\n\n        // The \"clear search\" button is triggered.\n        if (e.target.closest(selectors.actions.clearSearch)) {\n            // Clear the entered search query in the search bar and hide the search results container.\n            const searchInput = modal.getBody()[0].querySelector(selectors.actions.search);\n            searchInput.value = \"\";\n            searchInput.focus();\n            toggleSearchResultsView(modal.getBody()[0], mappedModules, searchInput.value);\n        }\n    };\n\n    modal.getBodyPromise()\n\n    // The return value of getBodyPromise is a jquery object containing the body NodeElement.\n    .then(body => body[0])\n\n    // Set up the carousel.\n    .then(body => {\n        $(body.querySelector(selectors.regions.carousel))\n            .carousel({\n                interval: false,\n                pause: true,\n                keyboard: false\n            });\n\n        return body;\n    })\n\n    // Add the listener for clicks on the body.\n    .then(body => {\n        body.addEventListener('click', bodyClickListener);\n        return body;\n    })\n\n    // Add a listener for an input change in the activity chooser's search bar.\n    .then(body => {\n        const searchInput = body.querySelector(selectors.actions.search);\n        // The search input is triggered.\n        searchInput.addEventListener('input', debounce(() => {\n            // Display the search results.\n            toggleSearchResultsView(body, mappedModules, searchInput.value);\n        }, 300));\n        return body;\n    })\n\n    // Register event listeners related to the keyboard navigation controls.\n    .then(body => {\n        // Get the active chooser options section.\n        const activeSectionId = body.querySelector(selectors.elements.activetab).getAttribute(\"href\");\n        const sectionChooserOptions = body.querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n        const firstChooserOption = sectionChooserOptions.querySelector(selectors.regions.chooserOption.container);\n        toggleFocusableChooserOption(firstChooserOption, true);\n        initTabsKeyboardNavigation(body);\n        initChooserOptionsKeyboardNavigation(body, mappedModules, sectionChooserOptions);\n        return body;\n    })\n    .catch();\n\n};\n\n/**\n * Initialise the keyboard navigation controls for the tab list items.\n *\n * @method initTabsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n */\nconst initTabsKeyboardNavigation = (body) => {\n    // Set up the tab handlers.\n    const favTabNav = body.querySelector(selectors.regions.favouriteTabNav);\n    const recommendedTabNav = body.querySelector(selectors.regions.recommendedTabNav);\n    const defaultTabNav = body.querySelector(selectors.regions.defaultTabNav);\n    const tabNavArray = [favTabNav, recommendedTabNav, defaultTabNav];\n    tabNavArray.forEach((element) => {\n        return element.addEventListener('keyup', (e) => {\n            const firstLink = e.target.parentElement.parentElement.firstElementChild.firstElementChild;\n            const lastLink = e.target.parentElement.parentElement.lastElementChild.firstElementChild;\n\n            if (e.keyCode === arrowRight) {\n                const nextLink = e.target.parentElement.nextElementSibling;\n                if (nextLink === null) {\n                    e.srcElement.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else if (nextLink.firstElementChild.classList.contains('d-none')) {\n                    e.srcElement.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else {\n                    e.srcElement.tabIndex = -1;\n                    nextLink.firstElementChild.tabIndex = 0;\n                    nextLink.firstElementChild.focus();\n                }\n            }\n            if (e.keyCode === arrowLeft) {\n                const previousLink = e.target.parentElement.previousElementSibling;\n                if (previousLink === null) {\n                    e.srcElement.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else if (previousLink.firstElementChild.classList.contains('d-none')) {\n                    e.srcElement.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else {\n                    e.srcElement.tabIndex = -1;\n                    previousLink.firstElementChild.tabIndex = 0;\n                    previousLink.firstElementChild.focus();\n                }\n            }\n            if (e.keyCode === home) {\n                e.srcElement.tabIndex = -1;\n                firstLink.tabIndex = 0;\n                firstLink.focus();\n            }\n            if (e.keyCode === end) {\n                e.srcElement.tabIndex = -1;\n                lastLink.tabIndex = 0;\n                lastLink.focus();\n            }\n            if (e.keyCode === space) {\n                e.preventDefault();\n                e.target.click();\n            }\n        });\n    });\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser options.\n *\n * @method initChooserOptionsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {HTMLElement} chooserOptionsContainer The section that contains the chooser items\n */\nconst initChooserOptionsKeyboardNavigation = (body, mappedModules, chooserOptionsContainer) => {\n    const chooserOptions = chooserOptionsContainer.querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keyup', (e) => {\n\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    e.preventDefault();\n                    const module = e.target.closest(selectors.regions.chooserOption.container);\n                    const moduleName = module.dataset.modname;\n                    const moduleData = mappedModules.get(moduleName);\n                    const carousel = $(body.querySelector(selectors.regions.carousel));\n                    carousel.carousel({\n                        interval: false,\n                        pause: true,\n                        keyboard: false\n                    });\n                    showModuleHelp(carousel, moduleData);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const nextOption = currentOption.nextElementSibling;\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                const toFocusOption = clickErrorHandler(nextOption, firstOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const previousOption = currentOption.previousElementSibling;\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                const toFocusOption = clickErrorHandler(previousOption, lastOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            if (e.keyCode === home) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                focusChooserOption(firstOption, currentOption);\n            }\n\n            if (e.keyCode === end) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                focusChooserOption(lastOption, currentOption);\n            }\n        });\n    });\n};\n\n/**\n * Focus on a chooser option element and remove the previous chooser element from the focus order\n *\n * @method focusChooserOption\n * @param {HTMLElement} currentChooserOption The current chooser option element that we want to focus\n * @param {HTMLElement|null} previousChooserOption The previous focused option element\n */\nconst focusChooserOption = (currentChooserOption, previousChooserOption = null) => {\n    if (previousChooserOption !== null) {\n        toggleFocusableChooserOption(previousChooserOption, false);\n    }\n\n    toggleFocusableChooserOption(currentChooserOption, true);\n    currentChooserOption.focus();\n};\n\n/**\n * Add or remove a chooser option from the focus order.\n *\n * @method toggleFocusableChooserOption\n * @param {HTMLElement} chooserOption The chooser option element which should be added or removed from the focus order\n * @param {Boolean} isFocusable Whether the chooser element is focusable or not\n */\nconst toggleFocusableChooserOption = (chooserOption, isFocusable) => {\n    const chooserOptionLink = chooserOption.querySelector(selectors.actions.addChooser);\n    const chooserOptionHelp = chooserOption.querySelector(selectors.actions.optionActions.showSummary);\n    const chooserOptionFavourite = chooserOption.querySelector(selectors.actions.optionActions.manageFavourite);\n\n    if (isFocusable) {\n        // Set tabindex to 0 to add current chooser option element to the focus order.\n        chooserOption.tabIndex = 0;\n        chooserOptionLink.tabIndex = 0;\n        chooserOptionHelp.tabIndex = 0;\n        chooserOptionFavourite.tabIndex = 0;\n    } else {\n        // Set tabindex to -1 to remove the previous chooser option element from the focus order.\n        chooserOption.tabIndex = -1;\n        chooserOptionLink.tabIndex = -1;\n        chooserOptionHelp.tabIndex = -1;\n        chooserOptionFavourite.tabIndex = -1;\n    }\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n * @return {HTMLElement}\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Render the search results in a defined container\n *\n * @method renderSearchResults\n * @param {HTMLElement} searchResultsContainer The container where the data should be rendered\n * @param {Object} searchResultsData Data containing the module items that satisfy the search criteria\n */\nconst renderSearchResults = async(searchResultsContainer, searchResultsData) => {\n    const templateData = {\n        'searchresultsnumber': searchResultsData.length,\n        'searchresults': searchResultsData\n    };\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/local/activitychooser/search_results', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Toggle (display/hide) the search results depending on the value of the search query\n *\n * @method toggleSearchResultsView\n * @param {HTMLElement} modalBody The body of the created modal for the section\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {String} searchQuery The search query\n */\nconst toggleSearchResultsView = async(modalBody, mappedModules, searchQuery) => {\n    const searchResultsContainer = modalBody.querySelector(selectors.regions.searchResults);\n    const chooserContainer = modalBody.querySelector(selectors.regions.chooser);\n    const clearSearchButton = modalBody.querySelector(selectors.elements.clearsearch);\n    const searchIcon = modalBody.querySelector(selectors.elements.searchicon);\n\n    if (searchQuery.length > 0) { // Search query is present.\n        const searchResultsData = searchModules(mappedModules, searchQuery);\n        await renderSearchResults(searchResultsContainer, searchResultsData);\n        const searchResultItemsContainer = searchResultsContainer.querySelector(selectors.regions.searchResultItems);\n        const firstSearchResultItem = searchResultItemsContainer.querySelector(selectors.regions.chooserOption.container);\n        if (firstSearchResultItem) {\n            // Set the first result item to be focusable.\n            toggleFocusableChooserOption(firstSearchResultItem, true);\n            // Register keyboard events on the created search result items.\n            initChooserOptionsKeyboardNavigation(modalBody, mappedModules, searchResultItemsContainer);\n        }\n        // Display the \"clear\" search button in the activity chooser search bar.\n        searchIcon.classList.add('d-none');\n        clearSearchButton.classList.remove('d-none');\n        // Hide the default chooser options container.\n        chooserContainer.setAttribute('hidden', 'hidden');\n        // Display the search results container.\n        searchResultsContainer.removeAttribute('hidden');\n    } else { // Search query is not present.\n        // Hide the \"clear\" search button in the activity chooser search bar.\n        clearSearchButton.classList.add('d-none');\n        searchIcon.classList.remove('d-none');\n        // Hide the search results container.\n        searchResultsContainer.setAttribute('hidden', 'hidden');\n        // Display the default chooser options container.\n        chooserContainer.removeAttribute('hidden');\n    }\n};\n\n/**\n * Return the list of modules which have a name or description that matches the given search term.\n *\n * @method searchModules\n * @param {Array} modules List of available modules\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchModules = (modules, searchTerm) => {\n    if (searchTerm === '') {\n        return modules;\n    }\n    searchTerm = searchTerm.toLowerCase();\n    const searchResults = [];\n    modules.forEach((activity) => {\n        const activityName = activity.title.toLowerCase();\n        const activityDesc = activity.help.toLowerCase();\n        if (activityName.includes(searchTerm) || activityDesc.includes(searchTerm)) {\n            searchResults.push(activity);\n        }\n    });\n\n    return searchResults;\n};\n\n/**\n * Disable the focus of all chooser options in a specific container (section).\n *\n * @method disableFocusAllChooserOptions\n * @param {HTMLElement} sectionChooserOptions The section that contains the chooser items\n */\nconst disableFocusAllChooserOptions = (sectionChooserOptions) => {\n    const allChooserOptions = sectionChooserOptions.querySelectorAll(selectors.regions.chooserOption.container);\n    allChooserOptions.forEach((chooserOption) => {\n        toggleFocusableChooserOption(chooserOption, false);\n    });\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {HTMLElement} origin The calling button\n * @param {Object} modal Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nexport const displayChooser = (origin, modal, sectionModules, partialFavourite) => {\n\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.componentname + '_' + module.link, module);\n    });\n\n    // Register event listeners.\n    registerListenerEvents(modal, mappedModules, partialFavourite);\n\n    // We want to focus on the action select when the dialog is closed.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n\n    // We want to focus on the first chooser option element as soon as the modal is opened.\n    modal.getRoot().on(ModalEvents.shown, () => {\n        modal.getModal()[0].tabIndex = -1;\n\n        modal.getBodyPromise()\n        .then(body => {\n            $(selectors.elements.tab).on('shown.bs.tab', (e) => {\n                const activeSectionId = e.target.getAttribute(\"href\");\n                const activeSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n                const firstChooserOption = activeSectionChooserOptions\n                    .querySelector(selectors.regions.chooserOption.container);\n                const prevActiveSectionId = e.relatedTarget.getAttribute(\"href\");\n                const prevActiveSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(prevActiveSectionId));\n\n                // Disable the focus of every chooser option in the previous active section.\n                disableFocusAllChooserOptions(prevActiveSectionChooserOptions);\n                // Enable the focus of the first chooser option in the current active section.\n                toggleFocusableChooserOption(firstChooserOption, true);\n                initChooserOptionsKeyboardNavigation(body[0], mappedModules, activeSectionChooserOptions);\n            });\n            return;\n        })\n        .catch(Notification.exception);\n    });\n\n    modal.show();\n};\n"],"file":"dialogue.min.js"}